// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
      // in = 1, sel = 001 // read like this [ 1, 0 , 0 ] fucking binary
      DMux(in=in, sel=sel[2], a=ao, b=bo); // 1, 0 => 1, 0
      DMux(in=ao, sel=sel[1], a=aoo, b=boo); // 1, 0 => 1, 0
      DMux(in=bo, sel=sel[1], a=coo, b=doo); // 0, 0 => 0, 0

      DMux(in=aoo, sel=sel[0], a=a, b=b); // 1, 1 => 0, 1
      DMux(in=boo, sel=sel[0], a=c, b=d); // 0, 1 => 0, 0
      DMux(in=coo, sel=sel[0], a=e, b=f); // 0, 1 => 0, 0
      DMux(in=doo, sel=sel[0], a=g, b=h); // 0, 1 => 0, 0

      // output = {0, 1, 0, 0, 0, 0, 0, 0}
}